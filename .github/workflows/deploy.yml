name: Build and Deploy to GKE

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']
  # pull_request:
  #   branches: ['staging']
  #   types: ['closed']

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }} # TODO: update Google Cloud project id
  GAR_LOCATION: ${{ secrets.GAR_LOCATION }} # TODO: update Artifact Registry location
  SERVICE: ${{ secrets.SERVICE_NAME }} # TODO: update Cloud Run service name
  REGION: ${{ secrets.SERVICE_REGION }} # TODO: update Cloud Run service region
  APP_NAME: ${{ secrets.APP_NAME }}
  GKE_CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
  CLUSTER_REGION: ${{ secrets.CLUSTER_REGION }}
  FRONTEND_SECRET: ${{ secrets.FRONTEND_SECRET }}
  ENV_FILE: ${{ secrets.ENV_FILE }}

jobs:
  deploy:
    if: ${{ github.event.pull_request.merged }} #! only merged to master
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Build and Push Container
        run: |-
          echo "${{ env.ENV_FILE }}" > ./.env.local
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP_NAME }}/${{ env.SERVICE }}:${{ github.sha }}" . -f deploy/Dockerfile
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.GKE_CLUSTER_NAME }}
          location: ${{ env.CLUSTER_REGION }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Install helm
        run: |-
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Clean deployments
        run: |-
          kubectl delete deployment frontend -n frontend --ignore-not-found

      - name: Deploy
        run: |-

          IMG=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.APP_NAME }}/${{ env.SERVICE }}
          TAG=${{ github.sha }}

          helm upgrade --install frontend ./deploy/frontend \
          --namespace frontend \
          --set=image.tag="${{ github.sha }}" \
          --set=image.repository="$IMG"
