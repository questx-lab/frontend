name: Build and Deploy to GKE for maintenance page

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'Environment which you want deploy'
        required: true
        options:
          - develop
          - staging
          - production

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }} # TODO: update Google Cloud project id
  GAR_LOCATION: ${{ vars.GAR_LOCATION }} # TODO: update Artifact Registry location
  SERVICE: ${{ vars.SERVICE_NAME }} # TODO: update Cloud Run service name
  APP_NAME: ${{ vars.APP_NAME }}
  GKE_CLUSTER_NAME: ${{ vars.GKE_CLUSTER_NAME }}
  CLUSTER_REGION: ${{ vars.CLUSTER_REGION }}
  ENV_FILE: ${{ vars.ENV_FILE }}
  GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
  DOMAIN: ${{ vars.DOMAIN }}

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'
    environment: ${{ github.event.inputs.environment }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          credentials_json: '${{ env.GCP_CREDENTIALS }}'

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.GKE_CLUSTER_NAME }}
          location: ${{ env.CLUSTER_REGION }}
          project_id: ${{ env.PROJECT_ID }}

      - name: Install helm
        run: |-
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Clean deployments
        run: |-
          kubectl delete configmap maintenance-page-html-configmap -n frontend --ignore-not-found
          kubectl delete deployment maintenance-page -n frontend --ignore-not-found

      - name: Deploy
        run: |-
          configs_cmd="$(cat ./maintenance_page.html)"
          kubectl create configmap maintenance-page-html-configmap -n frontend --from-literal=index.html="$configs_cmd"

          helm upgrade --install maintenance-page ./deploy/maintenance-page \
          --namespace frontend \
          --set=ingress.hosts[0].host=${{ env.DOMAIN }} \
          --set=ingress.hosts[0].paths[0].path="/(.*)" \
          --set=ingress.hosts[0].paths[0].pathType=Prefix \
          --create-namespace
