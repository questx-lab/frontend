name: test workflow

on:
  pull_request:
    branches: ['staging', 'production', 'develop']
    # types: ['closed']

env:
  GCP_STAGING_CREDENTIALS: ${{ secrets.GCP_STAGING_CREDENTIALS }}
  GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
  DOMAIN: ${{ vars.DOMAIN }}

jobs:
  deploy:
    # if: ${{ github.event.pull_request.merged }}
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'
    environment: ${{ github.base_ref }}

    runs-on: ubuntu-latest
    outputs:
      ip: ${{ steps.retrieve_ip.outputs.ip }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          credentials_json: '${{ env.GCP_CREDENTIALS }}'

      - name: Retrieve IP
        id: retrieve_ip
        run: |-
          ip_pattern="[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}"
          ip=$(gcloud compute forwarding-rules list --filter="name=( 'frontend-staging-https' )") | grep -o $ip_pattern

          echo "test=$ip" >> "$GITHUB_OUTPUT"

          echo "ip=$ip"

      - name: Google Auth for staging
        id: auth_staging
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          credentials_json: '${{ env.GCP_STAGING_CREDENTIALS }}'

      - name: Update to maintenance IP
        run: |-
          ip=${{ steps.retrieve_ip.outputs.ip }}

          gcloud dns record-sets update ${{ env.DOMAIN }} \
          --rrdatas=$ip \
          --ttl=300 \
          --type=A \
          --zone=xquest-xyz
